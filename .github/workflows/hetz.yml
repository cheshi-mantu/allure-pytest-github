name: allure-testops-hetz

on:
  workflow_dispatch:
    inputs:
      TEST_ENDPOINT:
        description: "Endpoint for tests"
        required: true
        default: https://qaq.oka.qu.qu.qu
      TEST_BROWSER:
        description: "Browser used for tests"
        required: true
        default: chrome
      ALLURE_JOB_RUN_ID:
        description: "ALLURE_JOB_RUN_ID service parameter. Leave blank."
        required: false
      ALLURE_USERNAME:
        description: "ALLURE_USERNAME service parameter. Leave blank"
        required: false
env:
  ALLURE_RESULTS: "allure-results"
  ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}

jobs:
  all-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install allure-pytest pytest
      - name: install and configure allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: http://5.75.180.36:10777
          allure-token: ${{ secrets.ALLURE_TOKEN_HETZNER }}
          allure-project-id: 23
      - name: Run pytest tests
        run: | 
          allurectl watch -- pytest --alluredir=${ALLURE_RESULTS} || true
          printenv | grep "ALLURE\|GITHUB" > env.list
          export $( allurectl job-run env)
          printenv | grep TEST_
          printenv | grep ALLURE_
          echo "Now, printing what we have in env.list"
          cat env.list
        env:
          TEST_ENDPOINT: ${{ github.event.inputs.TEST_ENDPOINT }}
          TEST_BROWSER: ${{ github.event.inputs.TEST_BROWSER }}
          ALLURE_RESULTS: "allure-results"
          ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}          
